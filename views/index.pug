extends layout

block content
  script.

    // GLOBALS
    var map;
    var point;
    var llToXY;
    var esri_singleLine;
    var esri_magicKey;

    $(function() {
    // ********** ESRI ArcGIS Functions ********** //

      require([
        "esri/map",
        "esri/geometry/Point",
        "esri/geometry/webMercatorUtils",
        "esri/Color",
        "esri/layers/FeatureLayer",
        "esri/renderers/SimpleRenderer",
        "dojo/domReady!"

      ], function (Map, Point, webMercatorUtils, Color, FeatureLayer, SimpleRenderer) {

        var pingLayer = new FeatureLayer("https://services7.arcgis.com/mJEg4IUE4wGzxmYR/arcgis/rest/services/thepeoplewalk/FeatureServer/0", {
          mode: FeatureLayer.MODE_ONDEMAND,
          id: "pings"
        });
        var maxTime = new Date().getTime();
        var minTime = maxTime- 604800000;
        console.log(maxTime);

        map = new Map("map", {
          basemap: "dark-gray",
          center: [-119.11, 36.65],
          zoom: 6
        });

        point = new Point();

        llToXY = function(lng, lat) {
          return webMercatorUtils.lngLatToXY(lng, lat);
        }

        var renderer = new SimpleRenderer({});
        renderer.setVisualVariables([
        {
          "type": "sizeInfo",
          "field": "time",
          "minDataValue": minTime,
          "maxDataValue": maxTime,

          "minSize": {
            "type": "sizeInfo",
            "expression": "view.scale",
            "stops": [{"value": minTime, "size": 5}]
          },

          "maxSize": {
            "type": "sizeInfo",
            "expression": "view.scale",
            "stops": [{"value": maxTime, "size": 50}]
          }
        },
        //-{
        //-  "type": "opacityInfo",
        //-  "field": "time",
        //-  "stops": [{"value": minTime, "opacity": 0},
        //-            {"value": maxTime, "opacity": 100}]
        //-},
        {
          "type": "colorInfo",
          "field": "time",
          "colors": [new Color([255, 0, 0]), new Color([255, 255, 0])]
        }]);

        //-pingLayer.setRenderer(renderer);

        map.addLayer(pingLayer);
      });
    
    // !!!!!!!!!! ESRI ArcGIS Functions !!!!!!!!!! //

    // ********** Typeahead ********** //

      $('#protestLocation').typeahead({
        highlight: true,
        minLength: 3
      }, {
        name: 'suggestions',
        limit: 11,
        display: 'text',
        source: function(query, syncResults, asyncResults) {
          $.get("http://geocode.arcgis.com/arcgis/rest/services/World/GeocodeServer/suggest", {
            text: $('#protestLocation').val(),
            f: "json",
            maxSuggestions: 3
          }, function(data) {
            asyncResults(data.suggestions);
          }, 'json');
        }
      });
    
    // !!!!!!!!!! Typeahead !!!!!!!!!! //

    // ********** Events ********** //

      $('.typeahead').on('typeahead:select typeahead:autocomplete', function(event, suggestion) {
        $('.typeahead').typeahead('close');
        esri_magicKey = suggestion.magicKey;
        esri_singleLine = suggestion.text;
        $.get("http://geocode.arcgis.com/arcgis/rest/services/World/GeocodeServer/findAddressCandidates", {
          singleLine: esri_singleLine,
          magicKey: esri_magicKey,
          f: "json"
        }, function(data) {
          point.setX(data.candidates[0].location.x);
          point.setY(data.candidates[0].location.y);
          map.centerAndZoom(point, 12);
        }, 'json');
      });
      
      //- $('#locationButton').click(function(event) {
      //-   if (navigator.geolocation) {
      //-     navigator.geolocation.getCurrentPosition(function(position) {
      //-       point.setX(position.coords.longitude);
      //-       point.setY(position.coords.latitude);
      //-       map.centerAndZoom(point, 12);

      //-       //- var token = "kvcup3ZWQcjoJ2sUSOJnms33jL4B232BaGIzwFyzQkq3arNWAJGZUJrdpQvr2zb0j8CHPkXrBzH3VG8kg7m28zB8u5f8Yby8za9I7eChPBy0fitpZ5nAdNGD3aMwcweFLEEeuyXpVa50gjAhQ4XjLA..;"
      //-       var pt = new Point(position.coords.longitude, position.coords.latitude);
      //-       //- var location = { x: point.getLongitude(), y: point.getLatitude() };
      //-       //- data = "f=json&location=" + JSON.stringify(location);
      //-       //- var url = "http://geocode.arcgis.com/arcgis/rest/services/World/GeocodeServer/reverseGeocode?f=json&location=" + point.getLatitude() + "%2C" + point.getLongitude();

      //-       console.log(url);
      //-       $.get("http://geocode.arcgis.com/arcgis/rest/services/World/GeocodeServer/reverseGeocode", {
      //-         f: "json",
      //-         location: pt,
      //-       }, function(resp) {
      //-         console.log(resp);
      //-         //- $('#protestLocation').val(data.address.Address);
      //-       }, 'json');
      //-     });
      //-   }
      //- });

      $('#pingForm').submit(function(event) {
        event.preventDefault();

        // validation
        console.log(point.getLongitude());
        if (point.getLongitude() == null) {
          $('#locationGroup').addClass("has-warning");
          return;
        }

        var xy = llToXY(point.getLongitude(), point.getLatitude());
        var geom = { x: xy[0], y: xy[1] }; 
        var features = [{
          geometry: geom,
          attributes: {
            purpose: $('#protestDescription').val(),
            time: $.now()
          }
        }];
        data = "f=json&features=" + JSON.stringify(features);
        // build a json object or do something with the form, store in data
        $.post("http://services7.arcgis.com/mJEg4IUE4wGzxmYR/arcgis/rest/services/thepeoplewalk/FeatureServer/0/addFeatures", data, function(resp) {
          $('#pingButton').addClass("btn-success").attr("disabled", "").text("Submitted");

          console.log(resp);
        }, 'json');
      });

    // !!!!!!!!!! Events !!!!!!!!!! //

    });


  div.container-fluid
    div.row.d-flex
      div.col-lg-4.col-md-5.align-self-center
        div.card.text-center
          div.card-block
            h3.card-title.mb-3 People are protesting.
            div.row
              div.col-md-10.offset-md-1
                form#pingForm
                  div.form-group
                    input#protestDescription.form-control(type="text", name="protestDescription", placeholder="Why?")
                  div#locationGroup.form-group.input-group
                    input#protestLocation.form-control.typeahead.form-control-warning(type="text", name="protestLocation", placeholder="Where?")
                    //- span.input-group-btn
                      button#locationButton.btn.btn-secondary(type="button")
                        img(src="assets/icons/location.svg")
                  div.form-group
                    button#pingButton.btn.btn-primary.btn-block(type="submit") Submit
      div.col-lg-8.col-md-7
        div.card
          div.card.block
            div#map

  div.footer

  //- script(src='/js/bootstrap3-typeahead.js')
